"""
A substring of s can be represented as s[j:k], where j and k represent the starting and ending positions of the substring in s; for example, if s = "AUGCUUCAGAAAGGUCUUACG", then s[2:5] = "UGCU".
The location of a substring s[j:k] is its beginning position j; note that t will have multiple locations in s if it occurs more than once as a substring of s (see the Sample below).

Given: Two DNA strings s and t (each of length at most 1 kbp).

Return: All locations of t as a substring of s.
"""
from Bio.Seq import Seq
sequence="AGTCAAGGATGGTCAAGGGTCAAGGAGCGTCAAGGCGGTCAAGGGATGTCAAGGTATACCAGTCAAGGCTTGTCAAGGGAACGGGTCAAGGGTCAAGGGTCAAGGAGATGTCAAGGCTGTCAAGGGTCAAGGGGTCAAGGCTGGTGTCAAGGTGTCAAGGCAGTCAAGGATCGTCAAGGTCTTATAGTCAAGGATGTTTGAATGTCAAGGCTGTCAAGGGTCAAGGTCGTCAAGGTTGTCAAGGGTCAAGGACGTCAAGGGGCGTCAAGGGTCAAGGATAAAGTCAAGGGTCAAGGGTCAAGGGCAGTCAAGGCAGTCAAGGGTCAAGGTCCAGGGTCAAGGATAGTCAAGGTCATGGTCAAGGAAAAACCTGTCAAGGAAGGTCAAGGGTCAAGGATAGTCAAGGTCTGTCAAGGTCGGTCAAGGCGTCGTCAAGGAAGGTCAAGGATCTGTCAAGGTCGTCAAGGTGTCAAGGTCCGGTCAAGGGTCAAGGGGGTCAAGGTAGTCAAGGTGTCAAGGTCGGTAGTCAAGGTCAAGTAGTCAAGGTGTCAAGGTGTCAAGGGAGTCAAGGCCGTCAAGGCAAGCCTTAGTCAAGGTCGAGAGTCAAGGGTCAAGGGTGATGTCAAGGTCGGTCAAGGGTCAAGGAGGTCAAGGCGTCAAGGGTCAAGGTGGGTTGGTCAAGGCTGTCAAGGTGTCTAGTCAAGGGTCAAGGGCGTCAAGGTCCTTACTGTCAAGGGTCAAGGGTGAATCGTCAAGGTAACGTCAAGGTTGACTATGGTCAAGGTAGTCAAGGGTCAAGGGTTGTCAAGGCGTCAAGGGAGTGTCAAGG"
subseq= "GTCAAGGGT"

my_seq = Seq(sequence)
my_subseq= Seq(subseq)

for i in range(len(my_seq)+1):
  len_subseq= len(my_subseq)
  
  if my_subseq == my_seq[i:i+len_subseq]:
    print(i+1, end=" ")
